[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# PROJECT
[project]
name = "zaphodvox"
dynamic = ["version"]
description = """\
  A command-line interface and python library for encoding text into \
  synthetic speech using Google Cloud Text-To-Speech or ElevenLabs APIs.\
  """
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [{name = "Thomas Bohmbach Jr", email = "thomasbohmbach@gmail.com"}]
keywords = [
  "text-to-speech",
  "tts",
  "audio",
  "mp3",
  "wav",
  "ogg",
  "elevenlabs",
  "google-cloud-texttospeech",
  ]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Environment :: Console",
  "Framework :: Pydantic",
  "Operating System :: OS Independent",
  "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
  "Topic :: Multimedia :: Sound/Audio :: Speech",
  "Topic :: Text Processing",
  ]

dependencies = [
  "elevenlabs==0.2.27",
  "google-cloud-texttospeech==2.15.0",
  "pydantic==2.5.3",
  "pydub==0.25.1",
  "rich==13.7.0",
  "tenacity==8.2.3",
  "Unidecode==1.3.7",
  ]

[project.urls]
Homepage = "https://github.com/gumptionthomas/zaphodvox"
Source = "https://github.com/gumptionthomas/zaphodvox"
Tracker = "https://github.com/gumptionthomas/zaphodvox/issues"

[project.scripts]
zaphodvox = "zaphodvox.main:main"

# HATCH
[tool.hatch.version]
path = "src/zaphodvox/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov"
  ]

[tool.hatch.envs.test.scripts]
test = "pytest"

[[tool.hatch.envs.test.matrix]]
python = ["3.11"]
version = ["1.0.0"]

# RUFF
[tool.ruff]
target-version = "py311"
line-length = 80

# PYTEST
[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--cov --cov-report=lcov:lcov.info --cov-report=term"
filterwarnings = ['ignore:.*audioop.*is deprecated.*:DeprecationWarning',]

# MYPY
[tool.mypy]
[[tool.mypy.overrides]]
module = "elevenlabs"
ignore_missing_imports = true

# COVERAGE
[tool.coverage.run]
source = ["src"]
omit = [
  "*/.local/*",
  "*/.pyenv/*",
  "*/elevenlabs-python/*"
  ]

[tool.coverage.report]
exclude_also = [
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
  ]
